lux/host-2083025408lux/concurrency/atom1421347710lux/macro/syntax-1591565866lux/compiler-1050918746lux/control/monad1682583984lux/control/applicative-263308519lux/control/functor1614333716lux/codata/function-982584506lux/codata/io733469181lux/data/error402214209lux/data/text/format-9817582lux/data/number925374690lux/data/struct/list2115900016lux1077778958Promise-Statevalueobservers@lux;importsLLTluxTLTlux/data/struct/listTlistLTlux/data/numberTLTlux/data/text/formatTLTlux/data/errorTLTlux/codata/ioTioLTlux/codata/functionTLTlux/control/functorTLTlux/control/applicativeTLTlux/control/monadTLTlux/compilerTcompilerLTlux/macro/syntaxTsLTlux/concurrency/atomTatomLTlux/hostTBoollux;BoolNatlux;NatIntlux;IntReallux;RealFraclux;FracCharlux;CharTextlux;TextVoidlux;VoidUnitlux;UnitIdentlux;IdentListlux;ListMaybelux;MaybeTypelux;TypeToplux;TopBottomlux;BottomAnn-Valuelux;Ann-ValueAnnslux;AnnsDeflux;DefBindingslux;BindingsCursorlux;CursorMetalux;MetaAnalysislux;AnalysisScopelux;ScopeAST'lux;AST'ASTlux;ASTEitherlux;EitherSourcelux;SourceModulelux;ModuleCompiler-Modelux;Compiler-ModeCompiler-Infolux;Compiler-InfoCompilerlux;CompilerLuxlux;LuxMacrolux;Macrocommentlux;commentAlllux;AllExlux;Ex->lux;->listlux;listlist&lux;list&&lux;&|lux;|_$lux;_$$_lux;$_iflux;ifhostlux;host`lux;``'lux;`''lux;'|>lux;|><|lux;<|.lux;.do-templatelux;do-templaten.=lux;n.=n.<lux;n.<n.<=lux;n.<=n.>lux;n.>n.>=lux;n.>=i.=lux;i.=i.<lux;i.<i.<=lux;i.<=i.>lux;i.>i.>=lux;i.>=f.=lux;f.=f.<lux;f.<f.<=lux;f.<=f.>lux;f.>f.>=lux;f.>=r.=lux;r.=r.<lux;r.<r.<=lux;r.<=r.>lux;r.>r.>=lux;r.>=n.+lux;n.+n.-lux;n.-n.*lux;n.*n./lux;n./n.%lux;n.%i.+lux;i.+i.-lux;i.-i.*lux;i.*i./lux;i./i.%lux;i.%f.+lux;f.+f.-lux;f.-f.*lux;f.*f./lux;f./f.%lux;f.%r.+lux;r.+r.-lux;r.-r.*lux;r.*r./lux;r./r.%lux;r.%n.minlux;n.minn.maxlux;n.maxi.minlux;i.mini.maxlux;i.maxf.minlux;f.minf.maxlux;f.maxr.minlux;r.minr.maxlux;r.maxnotlux;nottypelux;type:lux;::!lux;:!Reclux;Recexeclux;execcaselux;case^lux;^^orlux;^orletlux;letlambdalux;lambdalog!lux;log!def:lux;def:macro:lux;macro:sig:lux;sig:structlux;structstruct:lux;struct:idlux;idandlux;andorlux;ortype:lux;type:^openlux;^opencondlux;condget@lux;get@openlux;open|>.lux;|>.defaultlux;defaultmodule:lux;module:::lux;::set@lux;set@update@lux;update@^templatelux;^templatereal-to-intlux;real-to-intint-to-reallux;int-to-reali.inclux;i.inci.declux;i.decn.inclux;n.incn.declux;n.decdoclux;doclooplux;loop^slotslux;^slotslet%lux;let%^~lux;^~^=>lux;^=>ident-forlux;ident-forn.even?lux;n.even?n.odd?lux;n.odd?i.even?lux;i.even?i.odd?lux;i.odd?$lux;$islux;is^@lux;^@^|>lux;^|>:!!lux;:!!error!lux;error!with-cursorlux;with-cursorundefinedlux;undefined@prelux;@pre@postlux;@postint-to-natlux;int-to-natnat-to-intlux;nat-to-intreal-to-fraclux;real-to-fracfrac-to-reallux;frac-to-realtype-oflux;type-oftemplate:lux;template:Fold<List>lux/data/struct/list;Fold<List>reverselux/data/struct/list;reversefilterlux/data/struct/list;filterpartitionlux/data/struct/list;partitionas-pairslux/data/struct/list;as-pairstakelux/data/struct/list;takedroplux/data/struct/list;droptake-whilelux/data/struct/list;take-whiledrop-whilelux/data/struct/list;drop-whilesplitlux/data/struct/list;splitsplit-withlux/data/struct/list;split-withsplit-alllux/data/struct/list;split-allrepeatlux/data/struct/list;repeatiteratelux/data/struct/list;iteratefindlux/data/struct/list;findinterposelux/data/struct/list;interposesizelux/data/struct/list;sizeevery?lux/data/struct/list;every?any?lux/data/struct/list;any?atlux/data/struct/list;atEq<List>lux/data/struct/list;Eq<List>Monoid<List>lux/data/struct/list;Monoid<List>Functor<List>lux/data/struct/list;Functor<List>Applicative<List>lux/data/struct/list;Applicative<List>Monad<List>lux/data/struct/list;Monad<List>sortlux/data/struct/list;sorti.rangelux/data/struct/list;i.rangen.rangelux/data/struct/list;n.rangeempty?lux/data/struct/list;empty?member?lux/data/struct/list;member?headlux/data/struct/list;headtaillux/data/struct/list;tailziplux/data/struct/list;zipzip2lux/data/struct/list;zip2zip3lux/data/struct/list;zip3zip-withlux/data/struct/list;zip-withzip2-withlux/data/struct/list;zip2-withzip3-withlux/data/struct/list;zip3-withlastlux/data/struct/list;lastinitslux/data/struct/list;initsconcatlux/data/struct/list;concatListTlux/data/struct/list;ListTlift-listlux/data/struct/list;lift-listenumeratelux/data/struct/list;enumerateindiceslux/data/struct/list;indicesmap%@lux/control/functor;FunctorUUU>>$3$1>%$5$3%$5$1@lux;ListU+1*$1%$0$1Eq<Nat>lux/data/number;Eq<Nat>Eq<Int>lux/data/number;Eq<Int>Eq<Frac>lux/data/number;Eq<Frac>Eq<Real>lux/data/number;Eq<Real>Ord<Nat>lux/data/number;Ord<Nat>Ord<Int>lux/data/number;Ord<Int>Ord<Frac>lux/data/number;Ord<Frac>Ord<Real>lux/data/number;Ord<Real>Number<Nat>lux/data/number;Number<Nat>Number<Int>lux/data/number;Number<Int>Number<Real>lux/data/number;Number<Real>Number<Frac>lux/data/number;Number<Frac>Enum<Nat>lux/data/number;Enum<Nat>Enum<Int>lux/data/number;Enum<Int>Bounded<Nat>lux/data/number;Bounded<Nat>Bounded<Int>lux/data/number;Bounded<Int>Bounded<Real>lux/data/number;Bounded<Real>Bounded<Frac>lux/data/number;Bounded<Frac>Add@Monoid<Nat>lux/data/number;Add@Monoid<Nat>Mul@Monoid<Nat>lux/data/number;Mul@Monoid<Nat>Max@Monoid<Nat>lux/data/number;Max@Monoid<Nat>Min@Monoid<Nat>lux/data/number;Min@Monoid<Nat>Add@Monoid<Int>lux/data/number;Add@Monoid<Int>Mul@Monoid<Int>lux/data/number;Mul@Monoid<Int>Max@Monoid<Int>lux/data/number;Max@Monoid<Int>Min@Monoid<Int>lux/data/number;Min@Monoid<Int>Add@Monoid<Real>lux/data/number;Add@Monoid<Real>Mul@Monoid<Real>lux/data/number;Mul@Monoid<Real>Max@Monoid<Real>lux/data/number;Max@Monoid<Real>Min@Monoid<Real>lux/data/number;Min@Monoid<Real>Add@Monoid<Frac>lux/data/number;Add@Monoid<Frac>Mul@Monoid<Frac>lux/data/number;Mul@Monoid<Frac>Max@Monoid<Frac>lux/data/number;Max@Monoid<Frac>Min@Monoid<Frac>lux/data/number;Min@Monoid<Frac>Codec<Text,Nat>lux/data/number;Codec<Text,Nat>Codec<Text,Frac>lux/data/number;Codec<Text,Frac>Codec<Text,Int>lux/data/number;Codec<Text,Int>Codec<Text,Real>lux/data/number;Codec<Text,Real>Hash<Nat>lux/data/number;Hash<Nat>Hash<Int>lux/data/number;Hash<Int>Hash<Real>lux/data/number;Hash<Real>Binary@Codec<Text,Nat>lux/data/number;Binary@Codec<Text,Nat>binlux/data/number;binOctal@Codec<Text,Nat>lux/data/number;Octal@Codec<Text,Nat>octlux/data/number;octHex@Codec<Text,Nat>lux/data/number;Hex@Codec<Text,Nat>hexlux/data/number;hexnanlux/data/number;nan+influx/data/number;+inf-influx/data/number;-infnan?lux/data/number;nan?formatlux/data/text/format;formatFormatterlux/data/text/format;Formatter%blux/data/text/format;%b%nlux/data/text/format;%n%ilux/data/text/format;%i%flux/data/text/format;%f%rlux/data/text/format;%r%clux/data/text/format;%c%tlux/data/text/format;%t%identlux/data/text/format;%ident%astlux/data/text/format;%ast%typelux/data/text/format;%type%binlux/data/text/format;%bin%octlux/data/text/format;%oct%hexlux/data/text/format;%hex%listlux/data/text/format;%listErrorlux/data/error;ErrorFunctor<Error>lux/data/error;Functor<Error>Applicative<Error>lux/data/error;Applicative<Error>Monad<Error>lux/data/error;Monad<Error>ErrorTlux/data/error;ErrorTlift-errorlux/data/error;lift-errorfaillux/data/error;failIOlux/codata/io;IOiolux/codata/io;ioFunctor<IO>lux/codata/io;Functor<IO>Applicative<IO>lux/codata/io;Applicative<IO>Monad<IO>lux/codata/io;Monad<IO>constlux/codata/function;constfliplux/codata/function;flipMonoid<Function>lux/codata/function;Monoid<Function>Functorlux/control/functor;FunctorcompFlux/control/functor;compFApplicativelux/control/applicative;ApplicativecompAlux/control/applicative;compAMonadlux/control/monad;Monaddolux/control/monad;doseqMlux/control/monad;seqMmapMlux/control/monad;mapMfoldMlux/control/monad;foldMliftMlux/control/monad;liftMsyntax:lux/macro/syntax;syntax:Syntaxlux/macro/syntax;SyntaxAtomlux/concurrency/atom;Atomatomlux/concurrency/atom;atomb2llux/host;b2ls2llux/host;s2ld2ilux/host;d2id2llux/host;d2ld2flux/host;d2ff2ilux/host;f2if2llux/host;f2lf2dlux/host;f2di2blux/host;i2bi2slux/host;i2si2llux/host;i2li2flux/host;i2fi2dlux/host;i2di2clux/host;i2cl2blux/host;l2bl2slux/host;l2sl2ilux/host;l2il2flux/host;l2fl2dlux/host;l2dc2blux/host;c2bc2slux/host;c2sc2ilux/host;c2ic2llux/host;c2lBoolean-Arraylux/host;Boolean-ArrayByte-Arraylux/host;Byte-ArrayShort-Arraylux/host;Short-ArrayInt-Arraylux/host;Int-ArrayLong-Arraylux/host;Long-ArrayFloat-Arraylux/host;Float-ArrayDouble-Arraylux/host;Double-ArrayChar-Arraylux/host;Char-Arrayclass:lux/host;class:interface:lux/host;interface:objectlux/host;objectnulllux/host;nullnull?lux/host;null????lux/host;???!!!lux/host;!!!trylux/host;tryinstance?lux/host;instance?synchronizedlux/host;synchronizeddo-tolux/host;do-tojvm-importlux/host;jvm-importarraylux/host;arrayarray-lengthlux/host;array-lengtharray-loadlux/host;array-loadarray-storelux/host;array-storewith-openlux/host;with-openclass-forlux/host;class-forresolve-classlux/host;resolve-classRuntime@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;type?Btrue@lux/host;jvm-classTjava.lang.RuntimeRuntime.getRuntime>1^java.lang.Runtime@lux;func-argsLT[]Runtime.availableProcessors>1>^java.lang.Runtime@lux;Int^java.lang.Long@lux;func-argsLT[]T__gensym__g!obj+6784Runnable@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;type?Btrue@lux/host;jvm-classTjava.lang.RunnableThread@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;type?Btrue@lux/host;jvm-classTjava.lang.ThreadThread.new>^java.lang.Runnable^java.lang.Thread@lux;func-argsLT[__gensym__arg-name+6795]Thread.start>1>^java.lang.Thread@lux;Unit1@lux;func-argsLT[]T__gensym__g!obj+6796Executor@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;type?Btrue@lux/host;jvm-classTjava.util.concurrent.ExecutorExecutor.execute>^java.lang.Runnable>^java.util.concurrent.Executor@lux;Unit1@lux;func-argsLT[__gensym__arg-name+6805]T__gensym__g!obj+6806TimeUnit@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;type?Btrue@lux/host;jvm-classTjava.util.concurrent.TimeUnitTimeUnit.MILLISECONDS^java.util.concurrent.TimeUnitScheduledFuture@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;type?Btrue@lux/host;jvm-classTjava.util.concurrent.ScheduledFutureScheduledThreadPoolExecutor@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;type?Btrue@lux/host;jvm-classTjava.util.concurrent.ScheduledThreadPoolExecutorScheduledThreadPoolExecutor.new>@lux;Int^java.lang.Long^java.util.concurrent.ScheduledThreadPoolExecutor@lux;func-argsLT[__gensym__arg-name+6818]ScheduledThreadPoolExecutor.schedule>*^java.lang.Runnable*@lux;Int^java.lang.Long^java.util.concurrent.TimeUnit>^java.util.concurrent.ScheduledThreadPoolExecutor^java.util.concurrent.ScheduledFuture^java.lang.Object@lux;func-argsLT[__gensym__arg-name+6819 __gensym__arg-name+6820 __gensym__arg-name+6821]T__gensym__g!obj+6822concurrency-level@lux;Nat^#Nat@lux;export?Btrueexecutor^java.util.concurrent.ScheduledThreadPoolExecutorrunnable@lux;Macro>%@lux;ListU+1*$1%$0$1@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;LuxU>@lux;Compiler*@lux;Compiler-Info*@lux;Text^java.lang.String*@lux;Text^java.lang.String@lux;Compiler-Mode+1+1+11*@lux;Source%@lux;ListU+1*$1%$0$1%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;Text^java.lang.String*@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String@lux;Module*@lux;Int^java.lang.Long*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String@lux;Text^java.lang.String*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String@lux;Def*@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*@lux;Anns%@lux;ListU+1*$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String@lux;Ann-Value%U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$0$1%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Void0*%@lux;ListU+1*$1%$0$1@lux;Text^java.lang.String*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String*@lux;Nat^#Nat*%@lux;ListU+1*$1%$0$1@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String*@lux;Bool^java.lang.Boolean@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String*%@lux;ListU+1*$1%$0$1@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String*@lux;Bool^java.lang.Boolean@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Anns%@lux;ListU+1*$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String@lux;Ann-Value%U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$0$1%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String%$0$1@lux;Void0*%@lux;ListU+1*$1%$0$1@lux;Scope*%@lux;ListU+1*$1%$0$1@lux;Text^java.lang.String*@lux;Int^java.lang.Long*%%@lux;BindingsUU*@lux;Nat^#Nat%@lux;ListU+1*$1%$0$1*$3$1@lux;Text^java.lang.String@lux;Analysis%%@lux;MetaUU*$3$1*@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;Void0%%@lux;BindingsUU*@lux;Nat^#Nat%@lux;ListU+1*$1%$0$1*$3$1@lux;Text^java.lang.String@lux;Analysis%%@lux;MetaUU*$3$1*@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;Void0*%%@lux;BindingsUU*@lux;Nat^#Nat%@lux;ListU+1*$1%$0$1*$3$1@lux;Nat^#Nat%@lux;MaybeU+1$1@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*%@lux;MaybeU+1$1@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*@lux;Nat^#Nat*%@lux;ListU+1*$1%$0$1@lux;Nat^#Nat@lux;Void0%%@lux;EitherUU+$3$1@lux;Text^java.lang.String*@lux;Compiler*@lux;Compiler-Info*@lux;Text^java.lang.String*@lux;Text^java.lang.String@lux;Compiler-Mode+1+1+11*@lux;Source%@lux;ListU+1*$1%$0$1%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;Text^java.lang.String*@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String@lux;Module*@lux;Int^java.lang.Long*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String@lux;Text^java.lang.String*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String@lux;Def*@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*@lux;Anns%@lux;ListU+1*$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String@lux;Ann-Value%U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$0$1%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Void0*%@lux;ListU+1*$1%$0$1@lux;Text^java.lang.String*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String*@lux;Nat^#Nat*%@lux;ListU+1*$1%$0$1@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String*@lux;Bool^java.lang.Boolean@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String*%@lux;ListU+1*$1%$0$1@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String*@lux;Bool^java.lang.Boolean@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Anns%@lux;ListU+1*$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String@lux;Ann-Value%U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$0$1%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String%$0$1@lux;Void0*%@lux;ListU+1*$1%$0$1@lux;Scope*%@lux;ListU+1*$1%$0$1@lux;Text^java.lang.String*@lux;Int^java.lang.Long*%%@lux;BindingsUU*@lux;Nat^#Nat%@lux;ListU+1*$1%$0$1*$3$1@lux;Text^java.lang.String@lux;Analysis%%@lux;MetaUU*$3$1*@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;Void0%%@lux;BindingsUU*@lux;Nat^#Nat%@lux;ListU+1*$1%$0$1*$3$1@lux;Text^java.lang.String@lux;Analysis%%@lux;MetaUU*$3$1*@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;Void0*%%@lux;BindingsUU*@lux;Nat^#Nat%@lux;ListU+1*$1%$0$1*$3$1@lux;Nat^#Nat%@lux;MaybeU+1$1@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*%@lux;MaybeU+1$1@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*@lux;Nat^#Nat*%@lux;ListU+1*$1%$0$1@lux;Nat^#Nat@lux;Void0$1%@lux;ListU+1*$1%$0$1@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;func-argsLT__gensym__g!tokens+6835@lux;macro?BtruePromise-State@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;type-argsLTa@lux;type?Btrue@lux;tagsLTvalueTobserversPromise@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;export?Btrue@lux;type-argsLTa@lux;type?Btrue@lux;docTRepresents values produced by asynchronous computations (unlike IO, which is synchronous).promise'U>%@lux;MaybeU+1$1$1%@lux/concurrency/promise;PromiseU%@lux/concurrency/atom;AtomU%U^java.util.concurrent.atomic.AtomicReference$1$1%@lux/concurrency/promise;Promise-StateU*%@lux;MaybeU+1$1$1%@lux;ListU+1*$1%$0$1>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1$1$1@lux;func-argsLT?value@lux;hidden?Btrue@lux;export?Btruepromise@lux;Macro>%@lux;ListU+1*$1%$0$1@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;LuxU>@lux;Compiler*@lux;Compiler-Info*@lux;Text^java.lang.String*@lux;Text^java.lang.String@lux;Compiler-Mode+1+1+11*@lux;Source%@lux;ListU+1*$1%$0$1%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;Text^java.lang.String*@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String@lux;Module*@lux;Int^java.lang.Long*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String@lux;Text^java.lang.String*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String@lux;Def*@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*@lux;Anns%@lux;ListU+1*$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String@lux;Ann-Value%U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$0$1%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Void0*%@lux;ListU+1*$1%$0$1@lux;Text^java.lang.String*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String*@lux;Nat^#Nat*%@lux;ListU+1*$1%$0$1@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String*@lux;Bool^java.lang.Boolean@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String*%@lux;ListU+1*$1%$0$1@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String*@lux;Bool^java.lang.Boolean@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Anns%@lux;ListU+1*$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String@lux;Ann-Value%U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$0$1%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String%$0$1@lux;Void0*%@lux;ListU+1*$1%$0$1@lux;Scope*%@lux;ListU+1*$1%$0$1@lux;Text^java.lang.String*@lux;Int^java.lang.Long*%%@lux;BindingsUU*@lux;Nat^#Nat%@lux;ListU+1*$1%$0$1*$3$1@lux;Text^java.lang.String@lux;Analysis%%@lux;MetaUU*$3$1*@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;Void0%%@lux;BindingsUU*@lux;Nat^#Nat%@lux;ListU+1*$1%$0$1*$3$1@lux;Text^java.lang.String@lux;Analysis%%@lux;MetaUU*$3$1*@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;Void0*%%@lux;BindingsUU*@lux;Nat^#Nat%@lux;ListU+1*$1%$0$1*$3$1@lux;Nat^#Nat%@lux;MaybeU+1$1@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*%@lux;MaybeU+1$1@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*@lux;Nat^#Nat*%@lux;ListU+1*$1%$0$1@lux;Nat^#Nat@lux;Void0%%@lux;EitherUU+$3$1@lux;Text^java.lang.String*@lux;Compiler*@lux;Compiler-Info*@lux;Text^java.lang.String*@lux;Text^java.lang.String@lux;Compiler-Mode+1+1+11*@lux;Source%@lux;ListU+1*$1%$0$1%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;Text^java.lang.String*@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String@lux;Module*@lux;Int^java.lang.Long*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String@lux;Text^java.lang.String*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String@lux;Def*@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*@lux;Anns%@lux;ListU+1*$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String@lux;Ann-Value%U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$0$1%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Void0*%@lux;ListU+1*$1%$0$1@lux;Text^java.lang.String*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String*@lux;Nat^#Nat*%@lux;ListU+1*$1%$0$1@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String*@lux;Bool^java.lang.Boolean@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String*%@lux;ListU+1*$1%$0$1@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String*@lux;Bool^java.lang.Boolean@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Anns%@lux;ListU+1*$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String@lux;Ann-Value%U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$0$1%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String%$0$1@lux;Void0*%@lux;ListU+1*$1%$0$1@lux;Scope*%@lux;ListU+1*$1%$0$1@lux;Text^java.lang.String*@lux;Int^java.lang.Long*%%@lux;BindingsUU*@lux;Nat^#Nat%@lux;ListU+1*$1%$0$1*$3$1@lux;Text^java.lang.String@lux;Analysis%%@lux;MetaUU*$3$1*@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;Void0%%@lux;BindingsUU*@lux;Nat^#Nat%@lux;ListU+1*$1%$0$1*$3$1@lux;Text^java.lang.String@lux;Analysis%%@lux;MetaUU*$3$1*@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;Void0*%%@lux;BindingsUU*@lux;Nat^#Nat%@lux;ListU+1*$1%$0$1*$3$1@lux;Nat^#Nat%@lux;MaybeU+1$1@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*%@lux;MaybeU+1$1@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*@lux;Nat^#Nat*%@lux;ListU+1*$1%$0$1@lux;Nat^#Nat@lux;Void0$1%@lux;ListU+1*$1%$0$1@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;func-argsLT__gensym__g!tokens+6849@lux;export?Btrue@lux;macro?Btrue@lux;docT## Makes an uninitialized Promise (in this example, of Unit).
(promise Unit)

## The type is optional.
(promise)pollU>%@lux/concurrency/promise;PromiseU%@lux/concurrency/atom;AtomU%U^java.util.concurrent.atomic.AtomicReference$1$1%@lux/concurrency/promise;Promise-StateU*%@lux;MaybeU+1$1$1%@lux;ListU+1*$1%$0$1>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1$1$1%@lux;MaybeU+1$1$1@lux;func-argsLTpromise@lux;export?Btrue@lux;docTChecks whether an Promise's value has already been resolved.resolveU>$1>%@lux/concurrency/promise;PromiseU%@lux/concurrency/atom;AtomU%U^java.util.concurrent.atomic.AtomicReference$1$1%@lux/concurrency/promise;Promise-StateU*%@lux;MaybeU+1$1$1%@lux;ListU+1*$1%$0$1>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1$1$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Bool^java.lang.Boolean@lux;func-argsLTvalueTpromise@lux;export?Btrue@lux;docTSets an Promise's value if it hasn't been done yet.awaitU>>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1>%@lux/concurrency/promise;PromiseU%@lux/concurrency/atom;AtomU%U^java.util.concurrent.atomic.AtomicReference$1$1%@lux/concurrency/promise;Promise-StateU*%@lux;MaybeU+1$1$1%@lux;ListU+1*$1%$0$1>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1$1$1@lux;Unit1@lux;func-argsLTfTpromiseFunctor<Promise>%@lux/control/functor;FunctorUUU>>$3$1>%$5$3%$5$1@lux/concurrency/promise;PromiseU%@lux/concurrency/atom;AtomU%U^java.util.concurrent.atomic.AtomicReference$1$1%@lux/concurrency/promise;Promise-StateU*%@lux;MaybeU+1$1$1%@lux;ListU+1*$1%$0$1>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1$1@lux;export?Btrue@lux;struct?BtrueApplicative<Promise>%@lux/control/applicative;ApplicativeU*%@lux/control/functor;FunctorUUU>>$3$1>%$5$3%$5$1$1*U>$1%$3$1UU>%$5>$3$1>%$5$3%$5$1@lux/concurrency/promise;PromiseU%@lux/concurrency/atom;AtomU%U^java.util.concurrent.atomic.AtomicReference$1$1%@lux/concurrency/promise;Promise-StateU*%@lux;MaybeU+1$1$1%@lux;ListU+1*$1%$0$1>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1$1@lux;export?Btrue@lux;struct?BtrueMonad<Promise>%@lux/control/monad;MonadU*%@lux/control/applicative;ApplicativeU*%@lux/control/functor;FunctorUUU>>$3$1>%$5$3%$5$1$1*U>$1%$3$1UU>%$5>$3$1>%$5$3%$5$1$1U>%$3%$3$1%$3$1@lux/concurrency/promise;PromiseU%@lux/concurrency/atom;AtomU%U^java.util.concurrent.atomic.AtomicReference$1$1%@lux/concurrency/promise;Promise-StateU*%@lux;MaybeU+1$1$1%@lux;ListU+1*$1%$0$1>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1$1@lux;export?Btrue@lux;struct?BtrueseqUU>%@lux/concurrency/promise;PromiseU%@lux/concurrency/atom;AtomU%U^java.util.concurrent.atomic.AtomicReference$1$1%@lux/concurrency/promise;Promise-StateU*%@lux;MaybeU+1$1$1%@lux;ListU+1*$1%$0$1>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1$1$3>%@lux/concurrency/promise;PromiseU%@lux/concurrency/atom;AtomU%U^java.util.concurrent.atomic.AtomicReference$1$1%@lux/concurrency/promise;Promise-StateU*%@lux;MaybeU+1$1$1%@lux;ListU+1*$1%$0$1>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1$1$1%@lux/concurrency/promise;PromiseU%@lux/concurrency/atom;AtomU%U^java.util.concurrent.atomic.AtomicReference$1$1%@lux/concurrency/promise;Promise-StateU*%@lux;MaybeU+1$1$1%@lux;ListU+1*$1%$0$1>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1$1*$3$1@lux;func-argsLTleftTright@lux;export?Btrue@lux;docTSequencing combinator.altUU>%@lux/concurrency/promise;PromiseU%@lux/concurrency/atom;AtomU%U^java.util.concurrent.atomic.AtomicReference$1$1%@lux/concurrency/promise;Promise-StateU*%@lux;MaybeU+1$1$1%@lux;ListU+1*$1%$0$1>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1$1$3>%@lux/concurrency/promise;PromiseU%@lux/concurrency/atom;AtomU%U^java.util.concurrent.atomic.AtomicReference$1$1%@lux/concurrency/promise;Promise-StateU*%@lux;MaybeU+1$1$1%@lux;ListU+1*$1%$0$1>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1$1$1%@lux/concurrency/promise;PromiseU%@lux/concurrency/atom;AtomU%U^java.util.concurrent.atomic.AtomicReference$1$1%@lux/concurrency/promise;Promise-StateU*%@lux;MaybeU+1$1$1%@lux;ListU+1*$1%$0$1>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1$1+$3$1@lux;func-argsLTleftTright@lux;export?Btrue@lux;docTHeterogeneous alternative combinator.eitherU>%@lux/concurrency/promise;PromiseU%@lux/concurrency/atom;AtomU%U^java.util.concurrent.atomic.AtomicReference$1$1%@lux/concurrency/promise;Promise-StateU*%@lux;MaybeU+1$1$1%@lux;ListU+1*$1%$0$1>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1$1$1>%@lux/concurrency/promise;PromiseU%@lux/concurrency/atom;AtomU%U^java.util.concurrent.atomic.AtomicReference$1$1%@lux/concurrency/promise;Promise-StateU*%@lux;MaybeU+1$1$1%@lux;ListU+1*$1%$0$1>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1$1$1%@lux/concurrency/promise;PromiseU%@lux/concurrency/atom;AtomU%U^java.util.concurrent.atomic.AtomicReference$1$1%@lux/concurrency/promise;Promise-StateU*%@lux;MaybeU+1$1$1%@lux;ListU+1*$1%$0$1>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1$1$1@lux;func-argsLTleftTright@lux;export?Btrue@lux;docTHomogeneous alternative combinator.futureU>%@lux/codata/io;IOU>@lux;Void0$1$1%@lux/concurrency/promise;PromiseU%@lux/concurrency/atom;AtomU%U^java.util.concurrent.atomic.AtomicReference$1$1%@lux/concurrency/promise;Promise-StateU*%@lux;MaybeU+1$1$1%@lux;ListU+1*$1%$0$1>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1$1$1@lux;func-argsLTcomputation@lux;export?Btrue@lux;docTRuns an I/O computation on its own process and returns an Promise that will eventually host its result.wait>@lux;Nat^#Nat%@lux/concurrency/promise;PromiseU%@lux/concurrency/atom;AtomU%U^java.util.concurrent.atomic.AtomicReference$1$1%@lux/concurrency/promise;Promise-StateU*%@lux;MaybeU+1$1$1%@lux;ListU+1*$1%$0$1>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1$1@lux;Unit1@lux;func-argsLTtime@lux;export?Btrue@lux;docTReturns a Promise that will be resolved after the specified amount of milliseconds.time-outU>@lux;Nat^#Nat>%@lux/concurrency/promise;PromiseU%@lux/concurrency/atom;AtomU%U^java.util.concurrent.atomic.AtomicReference$1$1%@lux/concurrency/promise;Promise-StateU*%@lux;MaybeU+1$1$1%@lux;ListU+1*$1%$0$1>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1$1$1%@lux/concurrency/promise;PromiseU%@lux/concurrency/atom;AtomU%U^java.util.concurrent.atomic.AtomicReference$1$1%@lux/concurrency/promise;Promise-StateU*%@lux;MaybeU+1$1$1%@lux;ListU+1*$1%$0$1>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1$1%@lux;MaybeU+1$1$1@lux;func-argsLTtimeTpromise@lux;export?Btrue@lux;docTWait for a Promise to be resolved within the specified amount of milliseconds.delayU>@lux;Nat^#Nat>$1%@lux/concurrency/promise;PromiseU%@lux/concurrency/atom;AtomU%U^java.util.concurrent.atomic.AtomicReference$1$1%@lux/concurrency/promise;Promise-StateU*%@lux;MaybeU+1$1$1%@lux;ListU+1*$1%$0$1>$1%@lux/codata/io;IOU>@lux;Void0$1@lux;Unit1$1$1@lux;func-argsLTtimeTvalue@lux;export?Btrue@lux;docTDelivers a value after a certain period has passed.