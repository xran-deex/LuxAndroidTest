lux/data/struct/list2115900016lux/data/ident-1179509153lux/data/text-253194704lux/data/char-2083036283lux/data/number925374690lux/data/bool-1039481255lux/control/eq-755356234lux1077778958@lux;importsLLTluxTLTlux/control/eqTLTlux/data/boolTLTlux/data/numberTLTlux/data/charTcharLTlux/data/textTtextLTlux/data/identTLTlux/data/struct/listTlistBoollux;BoolNatlux;NatIntlux;IntReallux;RealFraclux;FracCharlux;CharTextlux;TextVoidlux;VoidUnitlux;UnitIdentlux;IdentListlux;ListMaybelux;MaybeTypelux;TypeToplux;TopBottomlux;BottomAnn-Valuelux;Ann-ValueAnnslux;AnnsDeflux;DefBindingslux;BindingsCursorlux;CursorMetalux;MetaAnalysislux;AnalysisScopelux;ScopeAST'lux;AST'ASTlux;ASTEitherlux;EitherSourcelux;SourceModulelux;ModuleCompiler-Modelux;Compiler-ModeCompiler-Infolux;Compiler-InfoCompilerlux;CompilerLuxlux;LuxMacrolux;Macrocommentlux;commentAlllux;AllExlux;Ex->lux;->listlux;listlist&lux;list&&lux;&|lux;|_$lux;_$$_lux;$_iflux;ifhostlux;host`lux;``'lux;`''lux;'|>lux;|><|lux;<|.lux;.do-templatelux;do-templaten.=lux;n.=n.<lux;n.<n.<=lux;n.<=n.>lux;n.>n.>=lux;n.>=i.=lux;i.=i.<lux;i.<i.<=lux;i.<=i.>lux;i.>i.>=lux;i.>=f.=lux;f.=f.<lux;f.<f.<=lux;f.<=f.>lux;f.>f.>=lux;f.>=r.=lux;r.=r.<lux;r.<r.<=lux;r.<=r.>lux;r.>r.>=lux;r.>=n.+lux;n.+n.-lux;n.-n.*lux;n.*n./lux;n./n.%lux;n.%i.+lux;i.+i.-lux;i.-i.*lux;i.*i./lux;i./i.%lux;i.%f.+lux;f.+f.-lux;f.-f.*lux;f.*f./lux;f./f.%lux;f.%r.+lux;r.+r.-lux;r.-r.*lux;r.*r./lux;r./r.%lux;r.%n.minlux;n.minn.maxlux;n.maxi.minlux;i.mini.maxlux;i.maxf.minlux;f.minf.maxlux;f.maxr.minlux;r.minr.maxlux;r.maxnotlux;nottypelux;type:lux;::!lux;:!Reclux;Recexeclux;execcaselux;case^lux;^^orlux;^orletlux;letlambdalux;lambdalog!lux;log!def:lux;def:macro:lux;macro:sig:lux;sig:structlux;structstruct:lux;struct:idlux;idandlux;andorlux;ortype:lux;type:^openlux;^opencondlux;condget@lux;get@openlux;open|>.lux;|>.defaultlux;defaultmodule:lux;module:::lux;::set@lux;set@update@lux;update@^templatelux;^templatereal-to-intlux;real-to-intint-to-reallux;int-to-reali.inclux;i.inci.declux;i.decn.inclux;n.incn.declux;n.decdoclux;doclooplux;loop^slotslux;^slotslet%lux;let%^~lux;^~^=>lux;^=>ident-forlux;ident-forn.even?lux;n.even?n.odd?lux;n.odd?i.even?lux;i.even?i.odd?lux;i.odd?$lux;$islux;is^@lux;^@^|>lux;^|>:!!lux;:!!error!lux;error!with-cursorlux;with-cursorundefinedlux;undefined@prelux;@pre@postlux;@postint-to-natlux;int-to-natnat-to-intlux;nat-to-intreal-to-fraclux;real-to-fracfrac-to-reallux;frac-to-realtype-oflux;type-oftemplate:lux;template:Eqlux/control/eq;Eqconjlux/control/eq;conjdisjlux/control/eq;disjEq<Bool>lux/data/bool;Eq<Bool>Or@Monoid<Bool>lux/data/bool;Or@Monoid<Bool>And@Monoid<Bool>lux/data/bool;And@Monoid<Bool>Codec<Text,Bool>lux/data/bool;Codec<Text,Bool>complementlux/data/bool;complementEq<Nat>lux/data/number;Eq<Nat>Eq<Int>lux/data/number;Eq<Int>Eq<Frac>lux/data/number;Eq<Frac>Eq<Real>lux/data/number;Eq<Real>Ord<Nat>lux/data/number;Ord<Nat>Ord<Int>lux/data/number;Ord<Int>Ord<Frac>lux/data/number;Ord<Frac>Ord<Real>lux/data/number;Ord<Real>Number<Nat>lux/data/number;Number<Nat>Number<Int>lux/data/number;Number<Int>Number<Real>lux/data/number;Number<Real>Number<Frac>lux/data/number;Number<Frac>Enum<Nat>lux/data/number;Enum<Nat>Enum<Int>lux/data/number;Enum<Int>Bounded<Nat>lux/data/number;Bounded<Nat>Bounded<Int>lux/data/number;Bounded<Int>Bounded<Real>lux/data/number;Bounded<Real>Bounded<Frac>lux/data/number;Bounded<Frac>Add@Monoid<Nat>lux/data/number;Add@Monoid<Nat>Mul@Monoid<Nat>lux/data/number;Mul@Monoid<Nat>Max@Monoid<Nat>lux/data/number;Max@Monoid<Nat>Min@Monoid<Nat>lux/data/number;Min@Monoid<Nat>Add@Monoid<Int>lux/data/number;Add@Monoid<Int>Mul@Monoid<Int>lux/data/number;Mul@Monoid<Int>Max@Monoid<Int>lux/data/number;Max@Monoid<Int>Min@Monoid<Int>lux/data/number;Min@Monoid<Int>Add@Monoid<Real>lux/data/number;Add@Monoid<Real>Mul@Monoid<Real>lux/data/number;Mul@Monoid<Real>Max@Monoid<Real>lux/data/number;Max@Monoid<Real>Min@Monoid<Real>lux/data/number;Min@Monoid<Real>Add@Monoid<Frac>lux/data/number;Add@Monoid<Frac>Mul@Monoid<Frac>lux/data/number;Mul@Monoid<Frac>Max@Monoid<Frac>lux/data/number;Max@Monoid<Frac>Min@Monoid<Frac>lux/data/number;Min@Monoid<Frac>Codec<Text,Nat>lux/data/number;Codec<Text,Nat>Codec<Text,Frac>lux/data/number;Codec<Text,Frac>Codec<Text,Int>lux/data/number;Codec<Text,Int>Codec<Text,Real>lux/data/number;Codec<Text,Real>Hash<Nat>lux/data/number;Hash<Nat>Hash<Int>lux/data/number;Hash<Int>Hash<Real>lux/data/number;Hash<Real>Binary@Codec<Text,Nat>lux/data/number;Binary@Codec<Text,Nat>binlux/data/number;binOctal@Codec<Text,Nat>lux/data/number;Octal@Codec<Text,Nat>octlux/data/number;octHex@Codec<Text,Nat>lux/data/number;Hex@Codec<Text,Nat>hexlux/data/number;hexnanlux/data/number;nan+influx/data/number;+inf-influx/data/number;-infnan?lux/data/number;nan?Eq<Text>lux/data/text;Eq<Text>Text/unit@lux;Text^java.lang.StringText/append>@lux;Text^java.lang.String>@lux;Text^java.lang.String@lux;Text^java.lang.Stringmodulelux/data/ident;modulenamelux/data/ident;nameEq<Ident>lux/data/ident;Eq<Ident>Codec<Text,Ident>lux/data/ident;Codec<Text,Ident>Hash<Ident>lux/data/ident;Hash<Ident>Fold<List>lux/data/struct/list;Fold<List>reverselux/data/struct/list;reversefilterlux/data/struct/list;filterpartitionlux/data/struct/list;partitionas-pairslux/data/struct/list;as-pairstakelux/data/struct/list;takedroplux/data/struct/list;droptake-whilelux/data/struct/list;take-whiledrop-whilelux/data/struct/list;drop-whilesplitlux/data/struct/list;splitsplit-withlux/data/struct/list;split-withsplit-alllux/data/struct/list;split-allrepeatlux/data/struct/list;repeatiteratelux/data/struct/list;iteratefindlux/data/struct/list;findinterposelux/data/struct/list;interposesizelux/data/struct/list;sizeevery?lux/data/struct/list;every?any?lux/data/struct/list;any?atlux/data/struct/list;atEq<List>lux/data/struct/list;Eq<List>Monoid<List>lux/data/struct/list;Monoid<List>Functor<List>lux/data/struct/list;Functor<List>Applicative<List>lux/data/struct/list;Applicative<List>Monad<List>lux/data/struct/list;Monad<List>sortlux/data/struct/list;sorti.rangelux/data/struct/list;i.rangen.rangelux/data/struct/list;n.rangeempty?lux/data/struct/list;empty?member?lux/data/struct/list;member?headlux/data/struct/list;headtaillux/data/struct/list;tailziplux/data/struct/list;zipzip2lux/data/struct/list;zip2zip3lux/data/struct/list;zip3zip-withlux/data/struct/list;zip-withzip2-withlux/data/struct/list;zip2-withzip3-withlux/data/struct/list;zip3-withlastlux/data/struct/list;lastinitslux/data/struct/list;initsconcatlux/data/struct/list;concatListTlux/data/struct/list;ListTlift-listlux/data/struct/list;lift-listenumeratelux/data/struct/list;enumerateindiceslux/data/struct/list;indicesmap%@lux/control/functor;FunctorUUU>>$3$1>%$5$3%$5$1@lux;ListU+1*$1%$0$1fold%@lux/control/fold;FoldUUU>>$1>$3$3>$3>%$5$1$3@lux;ListU+1*$1%$0$1_cursor@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Longbool>@lux;Bool^java.lang.Boolean@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;func-argsLTx@lux;export?Btruenat>@lux;Nat^#Nat@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;func-argsLTx@lux;export?Btrueint>@lux;Int^java.lang.Long@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;func-argsLTx@lux;export?Btruefrac>@lux;Frac^#Frac@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;func-argsLTx@lux;export?Btruereal>@lux;Real^java.lang.Double@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;func-argsLTx@lux;export?Btruechar>@lux;Char^java.lang.Character@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;func-argsLTx@lux;export?Btruetext>@lux;Text^java.lang.String@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;func-argsLTx@lux;export?Btruesymbol>@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;func-argsLTx@lux;export?Btruetag>@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;func-argsLTx@lux;export?Btrueform>%@lux;ListU+1*$1%$0$1@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;func-argsLTx@lux;export?Btruetuple>%@lux;ListU+1*$1%$0$1@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;func-argsLTx@lux;export?Btruerecord>%@lux;ListU+1*$1%$0$1*@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;func-argsLTx@lux;export?Btruelocal-symbol>@lux;Text^java.lang.String@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;func-argsLTname@lux;export?Btrue@lux;docTProduces a local symbol (a symbol with no module prefix).local-tag>@lux;Text^java.lang.String@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;func-argsLTname@lux;export?Btrue@lux;docTProduces a local tag (a tag with no module prefix).Eq<AST>%@lux/control/eq;EqU>$1>$1@lux;Bool^java.lang.Boolean@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;export?Btrue@lux;struct?Btrueto-text>@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;Text^java.lang.String@lux;func-argsLTast@lux;export?Btruereplace>@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long>@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long>@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;func-argsLToriginalTsubstituteTast@lux;export?Btrue@lux;docTReplaces all ASTs that look like 'original' with the 'substitute' in the given AST.