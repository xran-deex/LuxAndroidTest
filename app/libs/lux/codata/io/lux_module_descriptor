lux/data/struct/list2115900016lux/control/monad1682583984lux/control/applicative-263308519lux/control/functor1614333716lux1077778958@lux;importsLLTluxTLTlux/control/functorTLTlux/control/applicativeTLTlux/control/monadTLTlux/data/struct/listT@lux;docTA method for abstracting I/O and effectful computations to make it safe while writing pure functional code.Boollux;BoolNatlux;NatIntlux;IntReallux;RealFraclux;FracCharlux;CharTextlux;TextVoidlux;VoidUnitlux;UnitIdentlux;IdentListlux;ListMaybelux;MaybeTypelux;TypeToplux;TopBottomlux;BottomAnn-Valuelux;Ann-ValueAnnslux;AnnsDeflux;DefBindingslux;BindingsCursorlux;CursorMetalux;MetaAnalysislux;AnalysisScopelux;ScopeAST'lux;AST'ASTlux;ASTEitherlux;EitherSourcelux;SourceModulelux;ModuleCompiler-Modelux;Compiler-ModeCompiler-Infolux;Compiler-InfoCompilerlux;CompilerLuxlux;LuxMacrolux;Macrocommentlux;commentAlllux;AllExlux;Ex->lux;->listlux;listlist&lux;list&&lux;&|lux;|_$lux;_$$_lux;$_iflux;ifhostlux;host`lux;``'lux;`''lux;'|>lux;|><|lux;<|.lux;.do-templatelux;do-templaten.=lux;n.=n.<lux;n.<n.<=lux;n.<=n.>lux;n.>n.>=lux;n.>=i.=lux;i.=i.<lux;i.<i.<=lux;i.<=i.>lux;i.>i.>=lux;i.>=f.=lux;f.=f.<lux;f.<f.<=lux;f.<=f.>lux;f.>f.>=lux;f.>=r.=lux;r.=r.<lux;r.<r.<=lux;r.<=r.>lux;r.>r.>=lux;r.>=n.+lux;n.+n.-lux;n.-n.*lux;n.*n./lux;n./n.%lux;n.%i.+lux;i.+i.-lux;i.-i.*lux;i.*i./lux;i./i.%lux;i.%f.+lux;f.+f.-lux;f.-f.*lux;f.*f./lux;f./f.%lux;f.%r.+lux;r.+r.-lux;r.-r.*lux;r.*r./lux;r./r.%lux;r.%n.minlux;n.minn.maxlux;n.maxi.minlux;i.mini.maxlux;i.maxf.minlux;f.minf.maxlux;f.maxr.minlux;r.minr.maxlux;r.maxnotlux;nottypelux;type:lux;::!lux;:!Reclux;Recexeclux;execcaselux;case^lux;^^orlux;^orletlux;letlambdalux;lambdalog!lux;log!def:lux;def:macro:lux;macro:sig:lux;sig:structlux;structstruct:lux;struct:idlux;idandlux;andorlux;ortype:lux;type:^openlux;^opencondlux;condget@lux;get@openlux;open|>.lux;|>.defaultlux;defaultmodule:lux;module:::lux;::set@lux;set@update@lux;update@^templatelux;^templatereal-to-intlux;real-to-intint-to-reallux;int-to-reali.inclux;i.inci.declux;i.decn.inclux;n.incn.declux;n.decdoclux;doclooplux;loop^slotslux;^slotslet%lux;let%^~lux;^~^=>lux;^=>ident-forlux;ident-forn.even?lux;n.even?n.odd?lux;n.odd?i.even?lux;i.even?i.odd?lux;i.odd?$lux;$islux;is^@lux;^@^|>lux;^|>:!!lux;:!!error!lux;error!with-cursorlux;with-cursorundefinedlux;undefined@prelux;@pre@postlux;@postint-to-natlux;int-to-natnat-to-intlux;nat-to-intreal-to-fraclux;real-to-fracfrac-to-reallux;frac-to-realtype-oflux;type-oftemplate:lux;template:Functorlux/control/functor;FunctorcompFlux/control/functor;compFApplicativelux/control/applicative;ApplicativecompAlux/control/applicative;compAMonadlux/control/monad;Monaddolux/control/monad;doseqMlux/control/monad;seqMmapMlux/control/monad;mapMfoldMlux/control/monad;foldMliftMlux/control/monad;liftMFold<List>lux/data/struct/list;Fold<List>reverselux/data/struct/list;reversefilterlux/data/struct/list;filterpartitionlux/data/struct/list;partitionas-pairslux/data/struct/list;as-pairstakelux/data/struct/list;takedroplux/data/struct/list;droptake-whilelux/data/struct/list;take-whiledrop-whilelux/data/struct/list;drop-whilesplitlux/data/struct/list;splitsplit-withlux/data/struct/list;split-withsplit-alllux/data/struct/list;split-allrepeatlux/data/struct/list;repeatiteratelux/data/struct/list;iteratefindlux/data/struct/list;findinterposelux/data/struct/list;interposesizelux/data/struct/list;sizeevery?lux/data/struct/list;every?any?lux/data/struct/list;any?atlux/data/struct/list;atEq<List>lux/data/struct/list;Eq<List>Monoid<List>lux/data/struct/list;Monoid<List>Functor<List>lux/data/struct/list;Functor<List>Applicative<List>lux/data/struct/list;Applicative<List>Monad<List>lux/data/struct/list;Monad<List>sortlux/data/struct/list;sorti.rangelux/data/struct/list;i.rangen.rangelux/data/struct/list;n.rangeempty?lux/data/struct/list;empty?member?lux/data/struct/list;member?headlux/data/struct/list;headtaillux/data/struct/list;tailziplux/data/struct/list;zipzip2lux/data/struct/list;zip2zip3lux/data/struct/list;zip3zip-withlux/data/struct/list;zip-withzip2-withlux/data/struct/list;zip2-withzip3-withlux/data/struct/list;zip3-withlastlux/data/struct/list;lastinitslux/data/struct/list;initsconcatlux/data/struct/list;concatListTlux/data/struct/list;ListTlift-listlux/data/struct/list;lift-listenumeratelux/data/struct/list;enumerateindiceslux/data/struct/list;indicesIO@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;export?Btrue@lux;type-argsLTa@lux;type?Btrue@lux;docTA type that represents synchronous, effectful computations that may interact with the outside world.io@lux;Macro>%@lux;ListU+1*$1%$0$1@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;LuxU>@lux;Compiler*@lux;Compiler-Info*@lux;Text^java.lang.String*@lux;Text^java.lang.String@lux;Compiler-Mode+1+1+11*@lux;Source%@lux;ListU+1*$1%$0$1%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;Text^java.lang.String*@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String@lux;Module*@lux;Int^java.lang.Long*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String@lux;Text^java.lang.String*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String@lux;Def*@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*@lux;Anns%@lux;ListU+1*$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String@lux;Ann-Value%U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$0$1%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Void0*%@lux;ListU+1*$1%$0$1@lux;Text^java.lang.String*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String*@lux;Nat^#Nat*%@lux;ListU+1*$1%$0$1@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String*@lux;Bool^java.lang.Boolean@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String*%@lux;ListU+1*$1%$0$1@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String*@lux;Bool^java.lang.Boolean@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Anns%@lux;ListU+1*$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String@lux;Ann-Value%U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$0$1%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String%$0$1@lux;Void0*%@lux;ListU+1*$1%$0$1@lux;Scope*%@lux;ListU+1*$1%$0$1@lux;Text^java.lang.String*@lux;Int^java.lang.Long*%%@lux;BindingsUU*@lux;Nat^#Nat%@lux;ListU+1*$1%$0$1*$3$1@lux;Text^java.lang.String@lux;Analysis%%@lux;MetaUU*$3$1*@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;Void0%%@lux;BindingsUU*@lux;Nat^#Nat%@lux;ListU+1*$1%$0$1*$3$1@lux;Text^java.lang.String@lux;Analysis%%@lux;MetaUU*$3$1*@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;Void0*%%@lux;BindingsUU*@lux;Nat^#Nat%@lux;ListU+1*$1%$0$1*$3$1@lux;Nat^#Nat%@lux;MaybeU+1$1@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*%@lux;MaybeU+1$1@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*@lux;Nat^#Nat*%@lux;ListU+1*$1%$0$1@lux;Nat^#Nat@lux;Void0%%@lux;EitherUU+$3$1@lux;Text^java.lang.String*@lux;Compiler*@lux;Compiler-Info*@lux;Text^java.lang.String*@lux;Text^java.lang.String@lux;Compiler-Mode+1+1+11*@lux;Source%@lux;ListU+1*$1%$0$1%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;Text^java.lang.String*@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String@lux;Module*@lux;Int^java.lang.Long*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String@lux;Text^java.lang.String*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String@lux;Def*@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*@lux;Anns%@lux;ListU+1*$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String@lux;Ann-Value%U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$0$1%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Void0*%@lux;ListU+1*$1%$0$1@lux;Text^java.lang.String*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String*@lux;Nat^#Nat*%@lux;ListU+1*$1%$0$1@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String*@lux;Bool^java.lang.Boolean@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String*%@lux;ListU+1*$1%$0$1@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String*@lux;Bool^java.lang.Boolean@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Anns%@lux;ListU+1*$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String@lux;Ann-Value%U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$0$1%@lux;ListU+1*$1%$0$1*@lux;Text^java.lang.String%$0$1@lux;Void0*%@lux;ListU+1*$1%$0$1@lux;Scope*%@lux;ListU+1*$1%$0$1@lux;Text^java.lang.String*@lux;Int^java.lang.Long*%%@lux;BindingsUU*@lux;Nat^#Nat%@lux;ListU+1*$1%$0$1*$3$1@lux;Text^java.lang.String@lux;Analysis%%@lux;MetaUU*$3$1*@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;Void0%%@lux;BindingsUU*@lux;Nat^#Nat%@lux;ListU+1*$1%$0$1*$3$1@lux;Text^java.lang.String@lux;Analysis%%@lux;MetaUU*$3$1*@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;Void0*%%@lux;BindingsUU*@lux;Nat^#Nat%@lux;ListU+1*$1%$0$1*$3$1@lux;Nat^#Nat%@lux;MaybeU+1$1@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*%@lux;MaybeU+1$1@lux;Type%U+*@lux;Text^java.lang.String%@lux;ListU+1*$1%$0$1%$0$1+1+1+*%$0$1%$0$1+*%$0$1%$0$1+*%$0$1%$0$1+@lux;Nat^#Nat+@lux;Nat^#Nat+@lux;Nat^#Nat+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%@lux;ListU+1*$1%$0$1%$0$1%$0$1+*%$0$1%$0$1*@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String%$0$1@lux;Void0*@lux;Nat^#Nat*%@lux;ListU+1*$1%$0$1@lux;Nat^#Nat@lux;Void0$1%@lux;ListU+1*$1%$0$1@lux;AST%%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long%@lux;AST'U+@lux;Bool^java.lang.Boolean+@lux;Nat^#Nat+@lux;Int^java.lang.Long+@lux;Frac^#Frac+@lux;Real^java.lang.Double+@lux;Char^java.lang.Character+@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+@lux;Ident*@lux;Text^java.lang.String@lux;Text^java.lang.String+%@lux;ListU+1*$1%$0$1%$1%$0$1+%@lux;ListU+1*$1%$0$1%$1%$0$1%@lux;ListU+1*$1%$0$1*%$1%$0$1%$1%$0$1%@lux;MetaUU*$3$1@lux;Cursor*@lux;Text^java.lang.String*@lux;Int^java.lang.Long@lux;Int^java.lang.Long@lux;func-argsLTtokensTstate@lux;export?Btrue@lux;macro?Btrue@lux;docT## Delays the evaluation of an expression, by wrapping it in an IO 'thunk'.
## Great for wrapping effectful computations (which won't be performed until the IO is "run").
(io (exec
      (log! msg)
      "Some value..."))Functor<IO>%@lux/control/functor;FunctorUUU>>$3$1>%$5$3%$5$1@lux/codata/io;IOU>@lux;Void0$1@lux;export?Btrue@lux;struct?BtrueApplicative<IO>%@lux/control/applicative;ApplicativeU*%@lux/control/functor;FunctorUUU>>$3$1>%$5$3%$5$1$1*U>$1%$3$1UU>%$5>$3$1>%$5$3%$5$1@lux/codata/io;IOU>@lux;Void0$1@lux;export?Btrue@lux;struct?BtrueMonad<IO>%@lux/control/monad;MonadU*%@lux/control/applicative;ApplicativeU*%@lux/control/functor;FunctorUUU>>$3$1>%$5$3%$5$1$1*U>$1%$3$1UU>%$5>$3$1>%$5$3%$5$1$1U>%$3%$3$1%$3$1@lux/codata/io;IOU>@lux;Void0$1@lux;export?Btrue@lux;struct?BtruerunU>%@lux/codata/io;IOU>@lux;Void0$1$1$1@lux;func-argsLTaction@lux;export?Btrue@lux;docTA way to execute IO computations and perform their side-effects.